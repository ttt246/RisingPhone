package com.matthaigh27.chatgptwrapper.utils

import android.app.ActivityManager
import android.content.Context
import android.graphics.Bitmap
import android.graphics.BitmapFactory
import android.net.Uri
import android.os.Environment
import com.matthaigh27.chatgptwrapper.MyApplication
import java.io.ByteArrayOutputStream
import java.io.File
import java.io.FileInputStream
import java.io.FileNotFoundException
import java.io.IOException
import java.io.InputStream
import java.net.HttpURLConnection
import java.net.URL
import java.text.SimpleDateFormat
import java.util.Date
import java.util.Locale

class Utils {
    /**
     * set bitmap from download url generated by firebase store
     *
     * @param src download url of image
     * @return bitmap of the image
     */
    fun getBitmapFromURL(src: String?): Bitmap? {
        return try {
            val url = URL(src)
            val connection: HttpURLConnection = url.openConnection() as HttpURLConnection
            connection.doInput = true
            connection.connect()
            val input: InputStream = connection.inputStream
            BitmapFactory.decodeStream(input)
        } catch (e: Exception) {
            e.printStackTrace()
            null
        }
    }

    /**
     * @param uri uri for converting to ByteArray
     * @return ByteArray data converted from image uri
     */
    fun convertImageToByte(uri: Uri?): ByteArray? {
        var data: ByteArray? = null
        try {
            val cr = MyApplication.appContext.contentResolver
            val inputStream: InputStream? = cr.openInputStream(uri!!)
            val bitmap = BitmapFactory.decodeStream(inputStream)
            val baos = ByteArrayOutputStream()
            bitmap.compress(Bitmap.CompressFormat.JPEG, 100, baos)
            data = baos.toByteArray()
        } catch (e: FileNotFoundException) {
            e.printStackTrace()
        }
        return data
    }

    /**
     * @param path local path for converting to ByteArray
     * @return ByteArray data converted from image local path
     */
    fun getBytesFromPath(path: String?): ByteArray? {
        try {
            val stream = FileInputStream(path)
            val byteArray = stream.readBytes()
            stream.close()
            return byteArray
        } catch (e: IOException) {
            e.printStackTrace()
        }
        return null
    }

    /**
     * this creats image file with current datetime captured by camera
     */
    fun createSDCardFile(): File {
        val timeStamp: String =
            SimpleDateFormat("yyyyMMdd_HHmmss", Locale.getDefault()).format(Date())
        val imageFileName = "IMG_" + timeStamp + "_"
        val storageDir: File = MyApplication.appContext.getExternalFilesDir(Environment.DIRECTORY_PICTURES)!!
        return File.createTempFile(
            imageFileName,  /* prefix */
            ".jpg",         /* suffix */
            storageDir      /* directory */
        )
    }

    companion object {
        var instance : Utils = Utils()
    }
}